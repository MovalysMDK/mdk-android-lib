// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'org.jacoco:org.jacoco.core:0.7.4.201502262128'
    }
}

plugins {
  id "org.sonarqube" version "1.1"
}

// sonar
apply from: 'sonar.gradle'

apply plugin: 'license'

// Load dependencies
apply from: 'dependencies.gradle'

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        mavenLocal()

        maven {
            url mdkArtifactoryRepoReleases
            credentials {
                username mdkArtifactoryUsername
                password mdkArtifactoryPassword
            }
        }
        maven {
            url mdkArtifactoryRepoSnapshots
            credentials {
                username mdkArtifactoryUsername
                password mdkArtifactoryPassword
            }
        }
        jcenter()
    }

    ext {
        androidBuildToolsVersion = "23.0.2"
        androidMinSdkVersion = 15
        androidTargetSdkVersion = 23
        androidCompileSdkVersion = 23
    }
}


license {
    strictCheck true
    //exclude "**/*.properties"
    //excludes(["**/*.txt", "**/*.conf"])
    //include "**/*.groovy"
    //includes(["**/*.java", "**/*.properties"])
}

// compilation options
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.deprecation = true
    options.debug = true
}

task mdkLicenseFormat (type:nl.javadude.gradle.plugins.license.License) {
    source = [
            fileTree(dir:"core/src/main/java").include("**/*.java"),
            fileTree(dir:"core/src/main/res").include("**/*.xml"),
            fileTree(dir:"core/src/main").include("AndroidManifest.xml"),
            fileTree(dir:"basic/src/main/java").include("**/*.java"),
            fileTree(dir:"basic/src/main/res").include("**/*.xml"),
            fileTree(dir:"basic/src/main").include("AndroidManifest.xml"),
            fileTree(dir:"sample/src/main/java").include("**/*.java"),
            fileTree(dir:"sample/src/main/res").include("**/*.xml"),
            fileTree(dir:"sample/src/main").include("AndroidManifest.xml"),
            fileTree(dir:"sample/src/androidTest/java").include("**/*.java")
    ]
}

// Run ./gradlew licenseFormat
licenseFormat.dependsOn mdkLicenseFormat
clean.dependsOn licenseFormat

// generate a single report for tests for all modules
apply plugin: 'android-reporting'


